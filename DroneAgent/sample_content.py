#!/usr/bin/env python3
"""
DroneAgent Sample Content - No Dependencies Required
Shows the type of content DroneAgent generates
"""

def show_sample_ideas():
    """Display sample content ideas generated by DroneAgent"""
    
    sample_ideas = [
        {
            'title': "Building Your First Racing Drone: A Complete Guide",
            'description': "Step-by-step tutorial for building a 5-inch FPV racing drone from scratch. Cover frame selection, motor specs, and flight controller setup.",
            'hashtags': ['#DIYDrone', '#FPVRacing', '#DroneBuilding', '#TechDIY'],
            'theme': 'DIY drone builds and tutorials'
        },
        {
            'title': "Drone Tech Timeline: Past, Present, and Future",
            'description': "Journey through drone technology evolution - from radio-controlled planes to AI-powered autonomous systems.",
            'hashtags': ['#DroneTech', '#Innovation', '#TechHistory', '#FutureTech'],
            'theme': 'Drone technology evolution'
        },
        {
            'title': "How Drones Are Revolutionizing Industries in 2025",
            'description': "From agriculture to construction, explore how commercial drones are transforming business operations and creating new opportunities.",
            'hashtags': ['#CommercialDrones', '#DroneIndustry', '#Innovation', '#Business'],
            'theme': 'Commercial drone applications'
        }
    ]
    
    print("üöÅ DroneAgent Sample Content Generation")
    print("=" * 50)
    print("\nüí° Sample Content Ideas:")
    print("-" * 30)
    
    for i, idea in enumerate(sample_ideas, 1):
        print(f"\nüß† Idea {i}:")
        print(f"Title: {idea['title']}")
        print(f"Description: {idea['description']}")
        print(f"Theme: {idea['theme']}")
        print(f"Hashtags: {', '.join(idea['hashtags'])}")

def show_sample_thread():
    """Display a sample Twitter thread"""
    
    sample_thread = [
        {
            'text': "1/6 üßµ Building Your First Racing Drone: A Complete Guide\n\nWant to master drone building? Here's your complete guide! Let's dive into everything you need to know.",
            'needs_image': False,
            'type': 'intro'
        },
        {
            'text': "2/6 What You'll Need: Essential components and tools for getting started. Quality matters more than quantity when building your first setup.",
            'needs_image': True,
            'type': 'content'
        },
        {
            'text': "3/6 Step-by-Step Process: Breaking down the build process into manageable steps. Take your time with each phase - rushing leads to mistakes.",
            'needs_image': False,
            'type': 'content'
        },
        {
            'text': "4/6 Here's what most people don't know: Common Mistakes: Avoid these rookie errors that cost time and money. Learn from others' experience instead of making every mistake yourself.",
            'needs_image': False,
            'type': 'content'
        },
        {
            'text': "5/6 Pro Tips: Advanced techniques that separate beginners from experts. These small details make a huge difference in performance.",
            'needs_image': False,
            'type': 'content'
        },
        {
            'text': "6/6 üí° Key takeaway: Master these fundamentals and you'll be building like a pro. Practice makes perfect!\n\nFound this helpful? RT the first tweet! üîÑ\n\n#DIYDrone #FPVRacing #DroneBuilding #TechDIY",
            'needs_image': False,
            'type': 'conclusion'
        }
    ]
    
    print("\n" + "=" * 50)
    print("‚úçÔ∏è Sample Twitter Thread:")
    print("-" * 30)
    
    topic = "Building Your First Racing Drone"
    total_chars = sum(len(tweet['text']) for tweet in sample_thread)
    
    print(f"\nüìñ Thread: {topic}")
    print(f"Total tweets: {len(sample_thread)}")
    print(f"Total characters: {total_chars}")
    
    for tweet in sample_thread:
        print(f"\nüê¶ Tweet {tweet['text'].split()[0]}")
        print(f"Characters: {len(tweet['text'])}/280")
        print(f"Text: {tweet['text']}")
        if tweet.get('needs_image'):
            print("üñºÔ∏è  Needs image: Yes")

def show_sample_images():
    """Display sample image metadata"""
    
    sample_images = [
        {
            'source': 'unsplash',
            'description': 'FPV racing drone components laid out for assembly',
            'url': 'https://images.unsplash.com/photo-drone-build-components',
            'credit': 'Photo by DroneBuilder on Unsplash',
            'alt_text': 'Racing drone frame, motors, ESCs, and flight controller components organized on workbench for assembly'
        },
        {
            'source': 'pexels',
            'description': 'Professional commercial drone in flight',
            'url': 'https://images.pexels.com/commercial-drone-flying',
            'credit': 'Photo by TechPhotographer on Pexels',
            'alt_text': 'Commercial quadcopter drone with camera equipment flying outdoors against blue sky'
        }
    ]
    
    print("\n" + "=" * 50)
    print("üñºÔ∏è Sample Image Metadata:")
    print("-" * 30)
    
    for i, image in enumerate(sample_images, 1):
        print(f"\nüì∏ Image {i}:")
        print(f"Source: {image['source'].title()}")
        print(f"Description: {image['description']}")
        print(f"Credit: {image['credit']}")
        print(f"Alt text: {image['alt_text']}")

def show_promotional_content():
    """Display sample promotional content"""
    
    promo_thread = [
        {
            'text': "1/4 Ready to join the cockpit? üõ©Ô∏è\n\nAfter years in drone engineering, I've learned that success comes from having the right systems and processes."
        },
        {
            'text': "2/4 That's why I've documented everything in my comprehensive guide - from technical fundamentals to advanced optimization strategies."
        },
        {
            'text': "3/4 üîó Get the complete system: https://cryomech01.gumroad.com\nüìß Plus exclusive updates\nüéØ Join a community of builders\nüöÄ Level up your drone game"
        },
        {
            'text': "4/4 Drop a üöÅ if you're ready to take your drone knowledge to the next level!\n\n#Drone #Architect #Notion #DroneEngineering"
        }
    ]
    
    print("\n" + "=" * 50)
    print("üéØ Sample Promotional Content:")
    print("-" * 30)
    
    for i, tweet in enumerate(promo_thread, 1):
        print(f"\nüì¢ Promo Tweet {i}/{len(promo_thread)}")
        print(f"Characters: {len(tweet['text'])}/280")
        print(f"Text: {tweet['text']}")

def show_scheduling_info():
    """Display scheduling information"""
    
    print("\n" + "=" * 50)
    print("‚è∞ Optimal Posting Schedule:")
    print("-" * 30)
    
    schedule_info = [
        {
            'ist_time': '10:00',
            'utc_time': '04:30',
            'eastern_time': '23:30 (prev day)',
            'pacific_time': '20:30 (prev day)',
            'target': 'US Evening + EU Night'
        },
        {
            'ist_time': '19:00',
            'utc_time': '13:30',
            'eastern_time': '08:30',
            'pacific_time': '05:30',
            'target': 'US Morning + EU Afternoon'
        }
    ]
    
    for schedule in schedule_info:
        print(f"\nüïê Post Time: {schedule['ist_time']} IST")
        print(f"   UTC: {schedule['utc_time']}")
        print(f"   Eastern: {schedule['eastern_time']}")
        print(f"   Pacific: {schedule['pacific_time']}")
        print(f"   Target: {schedule['target']}")

def main():
    """Main demo function"""
    show_sample_ideas()
    show_sample_thread()
    show_sample_images()
    show_promotional_content()
    show_scheduling_info()
    
    print("\n" + "=" * 50)
    print("‚úÖ DroneAgent Sample Content Complete!")
    print("\nüöÄ To get started:")
    print("1. Install dependencies: pip install -r requirements.txt")
    print("2. Configure API keys in .env file")
    print("3. Run GUI: python main.py --gui")
    print("4. Or CLI: python main.py --ideate")
    print("\nüìö See README.md for detailed setup instructions")

if __name__ == "__main__":
    main()
